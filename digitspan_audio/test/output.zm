/******************************************************************************\
FILE:           output.zm
AUTHOR:         chris van Run (UiL-OTS)
ADAPTED BY:     -

DESCRIPTION:

Defines the formats of output table(s).


HISTORY:
2012-03-20 TV   Created.
2014-05-26 CvR  Added a few handy variables for researchers.

\******************************************************************************/


// Test phase output table record, defining what is to be logged for
// the final digit span score.
record TestOutput
{
    string 	preset;
	Direction 	direction;
    int         highest_span;           // trial number
	int			n_faults;				// includes the last fault
	int			last_trial_nr;
}


// Test phase output table record 2, defining what is to be logged for
// each trial.
record TestOutput2
{
    int         trialnum;       // trial number
	string 	    preset;

    string      digits;         // target sequence of digits

	Direction 	direction;		// Direction of recall

    string      value;          // value: entered text

    int         rt;             // response time [ms]
    int         correct;        // correct response: 0=no, 1=yes, -1=n.a.
}


// Test phase output table 1.
TestOutput[..] test_output;

TestOutput2[..] test_output2;
//------------------------------------------------------------------------------


// Appends one row of data to test phase output table 1.
void test_output_append(TestOutput data)
{
    expdb.add_trial_data_record(namespace_name, "1", "Test results");

    expdb.set_trial_data_string_field("preset", data.preset,
            "present (forward/backward...?)");
    expdb.set_trial_data_enum_field("direction", string(data.direction),
            "forward or backward");
    expdb.set_trial_data_int_field("highest_span", data.highest_span);
    expdb.set_trial_data_int_field("n_faults", data.n_faults);
    expdb.set_trial_data_int_field("last_trial_nr", data.last_trial_nr);
}

// Appends one row of data to test phase output table 2.
void test_output2_append(TestOutput2 data)
{
    expdb.add_trial_data_record(namespace_name, "2", "Test Results");

    expdb.set_trial_data_int_field("trialnum", data.trialnum);
    expdb.set_trial_data_string_field("preset", data.preset);
    expdb.set_trial_data_string_field("digits", data.digits);
    expdb.set_trial_data_enum_field("direction", string(data.direction));
    expdb.set_trial_data_string_field("value", data.value);
    expdb.set_trial_data_int_field("rt", data.rt);
    expdb.set_trial_data_int_field("correct", data.correct);
}

